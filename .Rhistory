theta_old
# use Newton Raphson
theta_old <- x[1] #set first observation as the first guess
theta_ests <- c(theta_old) #store guesses for theta in a vector to keep track
flag <- T #flag is condition for the while loop
while(flag){
d1 <- -n + sum(x)/theta_old
d2 <- -sum(x)/(theta_old)^2
theta_new <- theta_old - d1/d2 # theta_new is theta(i+1)
theta_ests <- c(theta_ests, theta_new)
if(abs(theta_new-theta_old) < 0.00000001){flag <- FALSE
}
theta_old <- theta_new # keep iterating
}
theta_ests
# use Newton Raphson
theta_old <- x[1] #set first observation as the first guess
theta_ests <- c(theta_old) #store guesses for theta in a vector to keep track
flag <- T #flag is condition for the while loop
while(flag){
d1 <- -n + sum(x)/theta_old
d2 <- -sum(x)/(theta_old)^2
theta_new <- theta_old - d1/d2 # theta_new is theta(i+1)
theta_ests <- c(theta_ests, theta_new)
if(abs(theta_new-theta_old) < 0.00000001){flag <- FALSE
}
theta_old <- theta_new # keep iterating
}
theta_new
plot(theta_ests)
# use Newton Raphson
theta_old <- x[1] #set first observation as the first guess
theta_ests <- c(theta_old) #store guesses for theta in a vector to keep track
flag <- T #flag is condition for the while loop
while(flag){
d1 <- -n + sum(x)/theta_old
d2 <- -sum(x)/(theta_old)^2
theta_new <- theta_old - d1/d2 # theta_new is theta(i+1)
theta_ests <- c(theta_ests, theta_new)
if(abs(theta_new-theta_old) < 0.00000001){flag <- FALSE
}
theta_old <- theta_new # keep iterating
}
theta_new
plot(theta_ests) # to see how many iterations it takes to reach the convergence
mean(x) # MLE of theta for this case
unparen(c("(yes)", "[no]", "{42}"))
setwd("C:/Users/ai022/Downloads/Operations Research/Project1/OR1")
knitr::opts_chunk$set(echo = TRUE)
library(leaflet)
library(tidyverse)
library(readxl)
library(writexl)
library(dplyr)
#load in data
mc <- read.csv("Data/menu.csv")
price <- read.csv("Data/prices.csv")
no_brekky <- mc %>%
filter(mc$Category != "Breakfast")
no_brekky_small_bev <- no_brekky[!grepl("Small", no_brekky$Item), ]
no_brekky_large_bev <- no_brekky_small_bev[!grepl("Large", no_brekky_small_bev$Item), ]
no_brekky_child_bev <- no_brekky_large_bev[!grepl("Child", no_brekky_large_bev$Item), ]
no_brekky_kids_bev <- no_brekky_child_bev[!grepl("Kids", no_brekky_child_bev$Item), ]
no_brekky_snack_bev <- no_brekky_kids_bev[!grepl("Snack", no_brekky_kids_bev$Item), ]
df <- no_brekky_snack_bev
df$Item <- gsub("\\(Medium\\)", "", df$Item)
df <- left_join(df, price, by = "Item")
df$Price <- gsub("\\$", "", df$Price)
df$Price <- ifelse(grepl("McFlurry", df$Item), 4.29, df$Price)
df$Price <- ifelse(grepl("Shake|Smoothie", df$Item), 3.69, df$Price)
df$Price <- ifelse(grepl("Mocha", df$Item), 3.49, df$Price)
df$Price <- ifelse(grepl("Latte|Minute", df$Item), 3.29, df$Price)
df$Price <- ifelse(grepl("Tea|Milk|Dasani", df$Item), 1.49, df$Price)
df$Price <- ifelse(grepl("Sprite|Dr|Coke|Cola", df$Item), 1.79, df$Price)
df$Price <- ifelse(grepl("Iced", df$Item) & grepl("Coffee", df$Item), 2.69, df$Price)
df$Price <- ifelse(grepl("Hot Chocolate", df$Item), 2.79, df$Price)
df$Price <- ifelse(grepl("Sundae", df$Item), 3.49, df$Price)
df$Price <- ifelse(grepl("Frappé", df$Item), 3.99, df$Price)
df$Price <- ifelse(grepl("Cookie", df$Item), 1.99, df$Price)
df$Price <- ifelse(grepl("Southwest", df$Item) & grepl("Salad", df$Item),
5.51, df$Price)
df$Price <- ifelse(grepl("Bacon", df$Item) & grepl("Salad", df$Item),
5.28, df$Price)
df$Price[c(2:3, 5:6, 16, 18, 37:42, 49:51, 53, 71)] <- c(5.19, 6.19, 5.69, 7.09,
4.79, 5.59, 1.89, 2.50,
5.16, 6.89, 12.39, 4.89,
3.59, 1.99, 0.89, 1.59,
1.99)
#drop NAs
df <- df[complete.cases(df$Price),]
#drop apple juice
df <- df[-43,]
#load in data
mc <- read.csv("Data/menu.csv")
price <- read.csv("Data/prices.csv")
no_brekky <- mc %>%
filter(mc$Category != "Breakfast")
no_brekky_small_bev <- no_brekky[!grepl("Small", no_brekky$Item), ]
no_brekky_large_bev <- no_brekky_small_bev[!grepl("Large", no_brekky_small_bev$Item), ]
no_brekky_child_bev <- no_brekky_large_bev[!grepl("Child", no_brekky_large_bev$Item), ]
no_brekky_kids_bev <- no_brekky_child_bev[!grepl("Kids", no_brekky_child_bev$Item), ]
no_brekky_snack_bev <- no_brekky_kids_bev[!grepl("Snack", no_brekky_kids_bev$Item), ]
df <- no_brekky_snack_bev
df$Item <- gsub("\\(Medium\\)", "", df$Item)
df <- left_join(df, price, by = "Item")
df$Price <- gsub("\\$", "", df$Price)
df$Price <- ifelse(grepl("McFlurry", df$Item), 4.29, df$Price)
df$Price <- ifelse(grepl("Shake|Smoothie", df$Item), 3.69, df$Price)
df$Price <- ifelse(grepl("Mocha", df$Item), 3.49, df$Price)
df$Price <- ifelse(grepl("Latte|Minute", df$Item), 3.29, df$Price)
df$Price <- ifelse(grepl("Tea|Milk|Dasani", df$Item), 1.49, df$Price)
df$Price <- ifelse(grepl("Sprite|Dr|Coke|Cola", df$Item), 1.79, df$Price)
df$Price <- ifelse(grepl("Iced", df$Item) & grepl("Coffee", df$Item), 2.69, df$Price)
df$Price <- ifelse(grepl("Hot Chocolate", df$Item), 2.79, df$Price)
df$Price <- ifelse(grepl("Sundae", df$Item), 3.49, df$Price)
df$Price <- ifelse(grepl("Frappé", df$Item), 3.99, df$Price)
df$Price <- ifelse(grepl("Cookie", df$Item), 1.99, df$Price)
df$Price <- ifelse(grepl("Southwest", df$Item) & grepl("Salad", df$Item),
5.51, df$Price)
df$Price <- ifelse(grepl("Bacon", df$Item) & grepl("Salad", df$Item),
5.28, df$Price)
df$Price[c(2:3, 5:6, 16, 18, 37:42, 49:51, 53, 71)] <- c(5.19, 6.19, 5.69, 7.09,
4.79, 5.59, 1.89, 2.50,
5.16, 6.89, 12.39, 4.89,
3.59, 1.99, 0.89, 1.59,
1.99)
#drop NAs
df <- df[complete.cases(df$Price),]
#drop apple juice
df <- df[-43,]
library(leaflet)
library(tidyverse)
library(readxl)
library(writexl)
library(dplyr)
library(lpSolve)
library(leaflet)
library(tidyverse)
library(readxl)
library(writexl)
library(dplyr)
install.packages("lpSolve")
library(leaflet)
library(tidyverse)
library(readxl)
library(writexl)
library(dplyr)
install.packages("LpSolve")
library(leaflet)
library(tidyverse)
library(readxl)
library(writexl)
library(dplyr)
library(lpSolve)
install.packages(lpSolve)
install.packages("lpSolve")
options("install.lock"=FALSE) install.packages("lpSolve")
options("install.lock"=FALSE)
install.packages("lpSolve")
library(leaflet)
library(tidyverse)
library(readxl)
library(writexl)
library(dplyr)
c(df)
o=as.list(df$Price)
View(null_dist)
o
o=as.list(as.numeric((df$Price)))
o
o=as.list(as.numeric((df$Price))) #define objective function
c=matrix(c(as.list(as.numeric((df$Calories))),
as.list(as.numeric((df$Carbohydrates))),
as.list(as.numeric((df$Protein))),
as.list(as.numeric((df$Dietary.Fiber))),
as.list(as.numeric((df$Sodium))),
as.list(as.numeric((df$Iron....Daily.Value.))),
as.list(as.numeric((df$Total.Fat....Daily.Value.))),
as.list(as.numeric((df$Saturated.Fat....Daily.Value.))),
as.list(as.numeric((df$Calcium....Daily.Value.))),
as.list(as.numeric((df$Cholesterol))),
ncol = 85,
byrow= T))
c
View(c)
View(c)
o=as.list(as.numeric((df$Price))) #define objective function
c=matrix(c(as.list(as.numeric((df$Calories))),
as.list(as.numeric((df$Carbohydrates))),
as.list(as.numeric((df$Protein))),
as.list(as.numeric((df$Dietary.Fiber))),
as.list(as.numeric((df$Sodium))),
as.list(as.numeric((df$Iron....Daily.Value.))),
as.list(as.numeric((df$Total.Fat....Daily.Value.))),
as.list(as.numeric((df$Saturated.Fat....Daily.Value.))),
as.list(as.numeric((df$Calcium....Daily.Value.))),
as.list(as.numeric((df$Cholesterol))
),
ncol = 85,
byrow=T))
o=as.list(as.numeric((df$Price))) #define objective function
c=matrix(c(df$Calories,
df$Carbohydrates,
df$Protein,
df$Dietary.Fiber,
df$Sodium,
df$Iron....Daily.Value.,
df$Total.Fat....Daily.Value.,
df$Saturated.Fat....Daily.Value.,
df$Calcium....Daily.Value.,
df$Cholesterol,
ncol = 85,
byrow=T))
c
View(ci)
View(c)
o=as.list(as.numeric((df$Price))) #define objective function
c=matrix(c(df$Calories,
df$Carbohydrates,
df$Protein,
df$Dietary.Fiber,
df$Sodium,
df$Iron....Daily.Value.,
df$Total.Fat....Daily.Value.,
df$Saturated.Fat....Daily.Value.,
df$Calcium....Daily.Value.,
df$Cholesterol),
ncol = 85,
byrow=T)
View(df)
<<<<<<< Updated upstream
#load in data
mc <- read.csv("Data/menu.csv")
price <- read.csv("Data/prices.csv")
no_brekky <- mc %>%
filter(mc$Category != "Breakfast")
no_brekky_small_bev <- no_brekky[!grepl("Small", no_brekky$Item), ]
no_brekky_large_bev <- no_brekky_small_bev[!grepl("Large", no_brekky_small_bev$Item), ]
no_brekky_child_bev <- no_brekky_large_bev[!grepl("Child", no_brekky_large_bev$Item), ]
no_brekky_kids_bev <- no_brekky_child_bev[!grepl("Kids", no_brekky_child_bev$Item), ]
no_brekky_snack_bev <- no_brekky_kids_bev[!grepl("Snack", no_brekky_kids_bev$Item), ]
df <- no_brekky_snack_bev
df$Item <- gsub("\\(Medium\\)", "", df$Item)
df <- left_join(df, price, by = "Item")
df$Price <- gsub("\\$", "", df$Price)
df$Price <- ifelse(grepl("McFlurry", df$Item), 4.29, df$Price)
df$Price <- ifelse(grepl("Shake|Smoothie", df$Item), 3.69, df$Price)
df$Price <- ifelse(grepl("Mocha", df$Item), 3.49, df$Price)
df$Price <- ifelse(grepl("Latte|Minute", df$Item), 3.29, df$Price)
df$Price <- ifelse(grepl("Tea|Milk|Dasani", df$Item), 1.49, df$Price)
df$Price <- ifelse(grepl("Sprite|Dr|Coke|Cola", df$Item), 1.79, df$Price)
df$Price <- ifelse(grepl("Iced", df$Item) & grepl("Coffee", df$Item), 2.69, df$Price)
df$Price <- ifelse(grepl("Hot Chocolate", df$Item), 2.79, df$Price)
df$Price <- ifelse(grepl("Sundae", df$Item), 3.49, df$Price)
df$Price <- ifelse(grepl("Frappé", df$Item), 3.99, df$Price)
df$Price <- ifelse(grepl("Cookie", df$Item), 1.99, df$Price)
df$Price <- ifelse(grepl("Southwest", df$Item) & grepl("Salad", df$Item),
5.51, df$Price)
df$Price <- ifelse(grepl("Bacon", df$Item) & grepl("Salad", df$Item),
5.28, df$Price)
df$Price[c(2:3, 5:6, 16, 18, 37:42, 49:51, 53, 71)] <- c(5.19, 6.19, 5.69, 7.09,
4.79, 5.59, 1.89, 2.50,
5.16, 6.89, 12.39, 4.89,
3.59, 1.99, 0.89, 1.59,
1.99)
#drop NAs
df <- df[complete.cases(df$Price),]
#drop apple juice
df <- df[-43,]
df <- df %>%
mutate(Drink = NA)
View(df)
#load in data
mc <- read.csv("Data/menu.csv")
price <- read.csv("Data/prices.csv")
no_brekky <- mc %>%
filter(mc$Category != "Breakfast")
no_brekky_small_bev <- no_brekky[!grepl("Small", no_brekky$Item), ]
no_brekky_large_bev <- no_brekky_small_bev[!grepl("Large", no_brekky_small_bev$Item), ]
no_brekky_child_bev <- no_brekky_large_bev[!grepl("Child", no_brekky_large_bev$Item), ]
no_brekky_kids_bev <- no_brekky_child_bev[!grepl("Kids", no_brekky_child_bev$Item), ]
no_brekky_snack_bev <- no_brekky_kids_bev[!grepl("Snack", no_brekky_kids_bev$Item), ]
df <- no_brekky_snack_bev
df$Item <- gsub("\\(Medium\\)", "", df$Item)
df <- left_join(df, price, by = "Item")
df$Price <- gsub("\\$", "", df$Price)
df$Price <- ifelse(grepl("McFlurry", df$Item), 4.29, df$Price)
df$Price <- ifelse(grepl("Shake|Smoothie", df$Item), 3.69, df$Price)
df$Price <- ifelse(grepl("Mocha", df$Item), 3.49, df$Price)
df$Price <- ifelse(grepl("Latte|Minute", df$Item), 3.29, df$Price)
df$Price <- ifelse(grepl("Tea|Milk|Dasani", df$Item), 1.49, df$Price)
df$Price <- ifelse(grepl("Sprite|Dr|Coke|Cola", df$Item), 1.79, df$Price)
df$Price <- ifelse(grepl("Iced", df$Item) & grepl("Coffee", df$Item), 2.69, df$Price)
df$Price <- ifelse(grepl("Hot Chocolate", df$Item), 2.79, df$Price)
df$Price <- ifelse(grepl("Sundae", df$Item), 3.49, df$Price)
df$Price <- ifelse(grepl("Frappé", df$Item), 3.99, df$Price)
df$Price <- ifelse(grepl("Cookie", df$Item), 1.99, df$Price)
df$Price <- ifelse(grepl("Southwest", df$Item) & grepl("Salad", df$Item),
5.51, df$Price)
df$Price <- ifelse(grepl("Bacon", df$Item) & grepl("Salad", df$Item),
5.28, df$Price)
df$Price[c(2:3, 5:6, 16, 18, 37:42, 49:51, 53, 71)] <- c(5.19, 6.19, 5.69, 7.09,
4.79, 5.59, 1.89, 2.50,
5.16, 6.89, 12.39, 4.89,
3.59, 1.99, 0.89, 1.59,
1.99)
#drop NAs
df <- df[complete.cases(df$Price),]
#drop apple juice
df <- df[-43,]
df <- df %>%
mutate(Drink = NA)
df$Drink[]
View(df)
#load in data
mc <- read.csv("Data/menu.csv")
price <- read.csv("Data/prices.csv")
no_brekky <- mc %>%
filter(mc$Category != "Breakfast")
no_brekky_small_bev <- no_brekky[!grepl("Small", no_brekky$Item), ]
no_brekky_large_bev <- no_brekky_small_bev[!grepl("Large", no_brekky_small_bev$Item), ]
no_brekky_child_bev <- no_brekky_large_bev[!grepl("Child", no_brekky_large_bev$Item), ]
no_brekky_kids_bev <- no_brekky_child_bev[!grepl("Kids", no_brekky_child_bev$Item), ]
no_brekky_snack_bev <- no_brekky_kids_bev[!grepl("Snack", no_brekky_kids_bev$Item), ]
df <- no_brekky_snack_bev
df$Item <- gsub("\\(Medium\\)", "", df$Item)
df <- left_join(df, price, by = "Item")
df$Price <- gsub("\\$", "", df$Price)
df$Price <- ifelse(grepl("McFlurry", df$Item), 4.29, df$Price)
df$Price <- ifelse(grepl("Shake|Smoothie", df$Item), 3.69, df$Price)
df$Price <- ifelse(grepl("Mocha", df$Item), 3.49, df$Price)
df$Price <- ifelse(grepl("Latte|Minute", df$Item), 3.29, df$Price)
df$Price <- ifelse(grepl("Tea|Milk|Dasani", df$Item), 1.49, df$Price)
df$Price <- ifelse(grepl("Sprite|Dr|Coke|Cola", df$Item), 1.79, df$Price)
df$Price <- ifelse(grepl("Iced", df$Item) & grepl("Coffee", df$Item), 2.69, df$Price)
df$Price <- ifelse(grepl("Hot Chocolate", df$Item), 2.79, df$Price)
df$Price <- ifelse(grepl("Sundae", df$Item), 3.49, df$Price)
df$Price <- ifelse(grepl("Frappé", df$Item), 3.99, df$Price)
df$Price <- ifelse(grepl("Cookie", df$Item), 1.99, df$Price)
df$Price <- ifelse(grepl("Southwest", df$Item) & grepl("Salad", df$Item),
5.51, df$Price)
df$Price <- ifelse(grepl("Bacon", df$Item) & grepl("Salad", df$Item),
5.28, df$Price)
df$Price[c(2:3, 5:6, 16, 18, 37:42, 49:51, 53, 71)] <- c(5.19, 6.19, 5.69, 7.09,
4.79, 5.59, 1.89, 2.50,
5.16, 6.89, 12.39, 4.89,
3.59, 1.99, 0.89, 1.59,
1.99)
#drop NAs
df <- df[complete.cases(df$Price),]
#drop apple juice
df <- df[-43,]
df <- df %>%
mutate(Drink = NA)
df$Drink[36:85] <- 1
df$Drink[1:35] <- 0
View(df)
=======
#export
write.csv(df, "Data/menu_prices.csv")
#export
write.csv(df, "Data/menu_prices.csv", row.names=FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(leaflet)
library(tidyverse)
library(readxl)
library(writexl)
library(dplyr)
>>>>>>> Stashed changes
#load in data
mc <- read.csv("Data/menu.csv")
price <- read.csv("Data/prices.csv")
no_brekky <- mc %>%
filter(mc$Category != "Breakfast")
no_brekky_small_bev <- no_brekky[!grepl("Small", no_brekky$Item), ]
no_brekky_large_bev <- no_brekky_small_bev[!grepl("Large", no_brekky_small_bev$Item), ]
no_brekky_child_bev <- no_brekky_large_bev[!grepl("Child", no_brekky_large_bev$Item), ]
no_brekky_kids_bev <- no_brekky_child_bev[!grepl("Kids", no_brekky_child_bev$Item), ]
no_brekky_snack_bev <- no_brekky_kids_bev[!grepl("Snack", no_brekky_kids_bev$Item), ]
df <- no_brekky_snack_bev
df$Item <- gsub("\\(Medium\\)", "", df$Item)
df <- left_join(df, price, by = "Item")
df$Price <- gsub("\\$", "", df$Price)
df$Price <- ifelse(grepl("McFlurry", df$Item), 4.29, df$Price)
df$Price <- ifelse(grepl("Shake|Smoothie", df$Item), 3.69, df$Price)
df$Price <- ifelse(grepl("Mocha", df$Item), 3.49, df$Price)
df$Price <- ifelse(grepl("Latte|Minute", df$Item), 3.29, df$Price)
df$Price <- ifelse(grepl("Tea|Milk|Dasani", df$Item), 1.49, df$Price)
df$Price <- ifelse(grepl("Sprite|Dr|Coke|Cola", df$Item), 1.79, df$Price)
df$Price <- ifelse(grepl("Iced", df$Item) & grepl("Coffee", df$Item), 2.69, df$Price)
df$Price <- ifelse(grepl("Hot Chocolate", df$Item), 2.79, df$Price)
df$Price <- ifelse(grepl("Sundae", df$Item), 3.49, df$Price)
df$Price <- ifelse(grepl("Frappé", df$Item), 3.99, df$Price)
df$Price <- ifelse(grepl("Cookie", df$Item), 1.99, df$Price)
df$Price <- ifelse(grepl("Southwest", df$Item) & grepl("Salad", df$Item),
5.51, df$Price)
df$Price <- ifelse(grepl("Bacon", df$Item) & grepl("Salad", df$Item),
5.28, df$Price)
df$Price[c(2:3, 5:6, 16, 18, 37:42, 49:51, 53, 71)] <- c(5.19, 6.19, 5.69, 7.09,
4.79, 5.59, 1.89, 2.50,
5.16, 6.89, 12.39, 4.89,
3.59, 1.99, 0.89, 1.59,
1.99)
#drop NAs
df <- df[complete.cases(df$Price),]
#drop apple juice
df <- df[-43,]
df <- df %>%
mutate(Drink = NA)
# put 1 for drinks, 0 for the rest
df$Drink[36:85] <- 1
df$Drink[1:35] <- 0
<<<<<<< Updated upstream
# convert the unit for calcium
df$Calcium <- df$Calcium....Daily.Value.*(1300/100)
View(df)
#load in data
mc <- read.csv("Data/menu.csv")
price <- read.csv("Data/prices.csv")
no_brekky <- mc %>%
filter(mc$Category != "Breakfast")
no_brekky_small_bev <- no_brekky[!grepl("Small", no_brekky$Item), ]
no_brekky_large_bev <- no_brekky_small_bev[!grepl("Large", no_brekky_small_bev$Item), ]
no_brekky_child_bev <- no_brekky_large_bev[!grepl("Child", no_brekky_large_bev$Item), ]
no_brekky_kids_bev <- no_brekky_child_bev[!grepl("Kids", no_brekky_child_bev$Item), ]
no_brekky_snack_bev <- no_brekky_kids_bev[!grepl("Snack", no_brekky_kids_bev$Item), ]
df <- no_brekky_snack_bev
df$Item <- gsub("\\(Medium\\)", "", df$Item)
df <- left_join(df, price, by = "Item")
df$Price <- gsub("\\$", "", df$Price)
df$Price <- ifelse(grepl("McFlurry", df$Item), 4.29, df$Price)
df$Price <- ifelse(grepl("Shake|Smoothie", df$Item), 3.69, df$Price)
df$Price <- ifelse(grepl("Mocha", df$Item), 3.49, df$Price)
df$Price <- ifelse(grepl("Latte|Minute", df$Item), 3.29, df$Price)
df$Price <- ifelse(grepl("Tea|Milk|Dasani", df$Item), 1.49, df$Price)
df$Price <- ifelse(grepl("Sprite|Dr|Coke|Cola", df$Item), 1.79, df$Price)
df$Price <- ifelse(grepl("Iced", df$Item) & grepl("Coffee", df$Item), 2.69, df$Price)
df$Price <- ifelse(grepl("Hot Chocolate", df$Item), 2.79, df$Price)
df$Price <- ifelse(grepl("Sundae", df$Item), 3.49, df$Price)
df$Price <- ifelse(grepl("Frappé", df$Item), 3.99, df$Price)
df$Price <- ifelse(grepl("Cookie", df$Item), 1.99, df$Price)
df$Price <- ifelse(grepl("Southwest", df$Item) & grepl("Salad", df$Item),
5.51, df$Price)
df$Price <- ifelse(grepl("Bacon", df$Item) & grepl("Salad", df$Item),
5.28, df$Price)
df$Price[c(2:3, 5:6, 16, 18, 37:42, 49:51, 53, 71)] <- c(5.19, 6.19, 5.69, 7.09,
4.79, 5.59, 1.89, 2.50,
5.16, 6.89, 12.39, 4.89,
3.59, 1.99, 0.89, 1.59,
1.99)
#drop NAs
df <- df[complete.cases(df$Price),]
#drop apple juice
df <- df[-43,]
df <- df %>%
mutate(Drink = NA)
# put 1 for drinks, 0 for the rest
df$Drink[36:85] <- 1
df$Drink[1:35] <- 0
# convert the unit for calcium
df$Calcium <- df$Calcium....Daily.Value.*(1300/100)
df$Iron <- df$Iron....Daily.Value.*(18/100)
View(df)
o=as.list(as.numeric((df$Price))) #define objective function
c=matrix(c(df$Calories,
df$Carbohydrates,
df$Protein,
df$Dietary.Fiber,
df$Sodium,
df$Iron,
df$Total.Fat....Daily.Value.,
df$Saturated.Fat....Daily.Value.,
df$Calcium,
df$Cholesterol,
df$Drink),
ncol = 85,
byrow=T)
d = c("<=", ">=", ">=", ">=", "<=", ">=", "<=","<=", "<=","<=",">=") #constraints
r = c(2000/3, 130/3, 46/3, 28/3, 2300/3, 18/3, 35/3,10/3,1300/3,100, 1) # RHS of constraints
sol = lpSolve::lp("min",o,c,d,r,compute.sens=T)
sol$solution
View(sol)
View(sol)
sol$solution
=======
# convert the unit for calcium from %DV to mg
df$Calcium <- df$Calcium....Daily.Value.*(1300/100)
df$Iron <- df$Iron....Daily.Value.*(18/100)
>>>>>>> Stashed changes
o=as.list(as.numeric((df$Price))) #define objective function
c=matrix(c(df$Calories,
df$Carbohydrates,
df$Protein,
df$Dietary.Fiber,
df$Sodium,
df$Iron,
df$Total.Fat....Daily.Value.,
df$Saturated.Fat....Daily.Value.,
df$Calcium,
df$Cholesterol,
df$Drink),
ncol = 85,
byrow=T)
d = c("<=", ">=", ">=", ">=", "<=", ">=", "<=","<=", "<=","<=",">=") #constraints
r = c(2000/3, 130/3, 46/3, 28/3, 2300/3, 18/3, 35/3,10/3,1300/3,100, 1) # RHS of constraints
sol = lpSolve::lp("min",o,c,d,r,compute.sens=T)
sol$solution
df[6,]
<<<<<<< Updated upstream
which(sol != 0)
which(sol != 0, arr.ind = TRUE)
lapply(sol,function(x) which(x!=0))
o=as.list(as.numeric((df$Price))) #define objective function
c=matrix(c(df$Calories,
df$Carbohydrates,
df$Protein,
df$Dietary.Fiber,
df$Sodium,
df$Iron,
df$Total.Fat....Daily.Value.,
df$Saturated.Fat....Daily.Value.,
df$Calcium,
df$Cholesterol,
df$Drink),
ncol = 85,
byrow=T)
d = c("<=", ">=", ">=", ">=", "<=", ">=", "<=","<=", "<=","<=",">=") #constraints
r = c(2000/3, 130/3, 46/3, 28/3, 2300/3, 18/3, 35/3,10/3,1300/3,100, 1) # RHS of constraints
sol = lpSolve::lp("min",o,c,d,r,compute.sens=T)
sol$solution
index <- which(sol$solution != 0)
df[index,]
=======
sol$solution
which(sol$solution != 0)
index <- which(sol$solution != 0)
df[index,]
items_coeff <- merge(df[index,],sol$solution[index])
View(items_coeff)
df[index,]
coeffs <- sol$solution[index]
coeffs
items <- df[index,]
items
items <- df$Item[index,]
items <- df$Item[index]
items
items_coeff <- merge(coeffs, items)
items_coeff
coeffs <- data.frame(sol$solution[index])
coeffs
items <- data.frame(df$Item[index])
items_coeff <- merge(coeffs, items)
items_coeff
items
items <- df$Item[index]
items
items_coeff <- left_join(coeffs, items)
items_coeff <- left_join(coeffs, items, copy = T)
items_coeff <- full_join(coeffs, items, copy = T)
coeffs
items
coeffs <- coeffs %>%
mutate(items = df$Item[index])
coeffs
>>>>>>> Stashed changes
